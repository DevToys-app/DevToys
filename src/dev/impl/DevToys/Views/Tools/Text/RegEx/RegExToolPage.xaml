<Page
    x:Class="DevToys.Views.Tools.RegEx.RegExToolPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:DevToys.UI.Controls"
    xmlns:converters="using:DevToys.UI.Converters"
    xmlns:regEx="using:DevToys.ViewModels.Tools.RegEx"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    NavigationCacheMode="Required"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
        <converters:NullToBooleanConverter x:Key="StringNullOrWhiteSpaceToFalseConverter" IsInverted="True" EnforceNonWhiteSpaceString="True" />

        <Style x:Key="TextBlockMatchRangeStyle" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Opacity" Value="0.75" />
        </Style>
        <Style x:Key="CardStyle" TargetType="Grid">
            <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
            <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}" />
            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
            <Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}"/>
        </Style>
    </Page.Resources>

    <Grid Margin="0,0,0,16" RowSpacing="12">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition FromVerticalOffset="50" IsStaggeringEnabled="True" />
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Spacing="4">
            <TextBlock Style="{StaticResource SubTitleTextBlock}" Text="{x:Bind Path=ViewModel.Strings.Configuration}" />


            <controls:ExpandableSettingControl Title="{x:Bind Path=ViewModel.Strings.Options}" Description="{x:Bind Path=ViewModel.SelectedOptions, Mode=OneWay}">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#xF6A9;" />
                </controls:ExpandableSettingControl.Icon>
                <controls:ExpandableSettingControl.ExpandableContent>
                    <StackPanel HorizontalAlignment="Stretch" Spacing="0">
                        <controls:ExpandableSettingControl
                            Title="{x:Bind Path=ViewModel.Strings.EcmaScript}"
                            CornerRadius="0,0,4,4"
                            Description="{x:Bind Path=ViewModel.Strings.EcmaScriptDescription}">
                            <ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.EcmaScript, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind Path=ViewModel.Strings.CultureInvariant}"
                            CornerRadius="0"
                            Description="{x:Bind Path=ViewModel.Strings.CultureInvariantDescription}">
                            <ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.CultureInvariant, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind Path=ViewModel.Strings.IgnoreCase}"
                            CornerRadius="0"
                            Description="{x:Bind Path=ViewModel.Strings.IgnoreCaseDescription}">
                            <ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.IgnoreCase, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind Path=ViewModel.Strings.IgnoreWhitespace}"
                            CornerRadius="0"
                            Description="{x:Bind Path=ViewModel.Strings.IgnoreWhitespaceDescription}">
                            <ToggleSwitch
                                IsEnabled="{x:Bind Converter={StaticResource InvertedBooleanConverter}, Mode=OneWay, Path=ViewModel.EcmaScript}"
                                IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.IgnoreWhitespace, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind Path=ViewModel.Strings.Singleline}"
                            CornerRadius="0"
                            Description="{x:Bind Path=ViewModel.Strings.SinglelineDescription}">
                            <ToggleSwitch
                                IsEnabled="{x:Bind Converter={StaticResource InvertedBooleanConverter}, Mode=OneWay, Path=ViewModel.EcmaScript}"
                                IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.Singleline, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind Path=ViewModel.Strings.Multiline}"
                            CornerRadius="0"
                            Description="{x:Bind Path=ViewModel.Strings.MultilineDescription}">
                            <ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.Multiline, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind Path=ViewModel.Strings.RightToLeft}"
                            CornerRadius="0"
                            Description="{x:Bind Path=ViewModel.Strings.RightToLeftDescription}">
                            <ToggleSwitch
                                IsEnabled="{x:Bind Converter={StaticResource InvertedBooleanConverter}, Mode=OneWay, Path=ViewModel.EcmaScript}"
                                IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.RightToLeft, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" />
                        </controls:ExpandableSettingControl>
                    </StackPanel>
                </controls:ExpandableSettingControl.ExpandableContent>
            </controls:ExpandableSettingControl>
        </StackPanel>

        <controls:CustomTextBox
            Grid.Row="1"
            Header="{x:Bind Path=ViewModel.Strings.RegularExpression}"
            Text="{x:Bind Mode=TwoWay, Path=ViewModel.RegularExpression, UpdateSourceTrigger=PropertyChanged}" />

        <muxc:InfoBar
            Grid.Row="2"
            Severity="Error"
            Message="{x:Bind Path=ViewModel.ErrorMsg, Mode=OneWay}"
            IsOpen="{x:Bind Path=ViewModel.ErrorMsg, Mode=OneWay, Converter={StaticResource StringNullOrWhiteSpaceToFalseConverter}}"
            IsClosable="False"/>

        <controls:CustomTextBox
            x:Name="MatchTextBox"
            Grid.Row="3"
            MinHeight="150"
            AcceptsReturn="True"
            Header="{x:Bind Path=ViewModel.Strings.Text}"
            IsRichTextEdit="True"
            Text="{x:Bind Mode=TwoWay, Path=ViewModel.Text, UpdateSourceTrigger=PropertyChanged}" />

        <StackPanel Grid.Row="4" Spacing="4">
            <TextBlock Style="{StaticResource SubTitleTextBlock}" Text="{x:Bind Path=ViewModel.Strings.Matches}" />

            <Grid
                Grid.Row="4"
                Style="{StaticResource CardStyle}">
                <ListView ItemsSource="{x:Bind ViewModel.MatchGroups, Mode=OneWay}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="regEx:MatchDetails">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="200"/>
                                    <ColumnDefinition Width="Auto" MinWidth="70"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{x:Bind Title}"/>
                                <TextBlock Grid.Column="1" Style="{StaticResource TextBlockMatchRangeStyle}" Text="{x:Bind Range}"/>
                                <TextBlock Grid.Column="2" Text="{x:Bind Value}"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </StackPanel>
    </Grid>
</Page>