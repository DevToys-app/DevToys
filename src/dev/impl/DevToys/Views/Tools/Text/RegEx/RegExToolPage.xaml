<Page
	x:Class="DevToys.Views.Tools.RegEx.RegExToolPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:DevToys.UI.Controls"
	xmlns:controls1="using:Microsoft.UI.Xaml.Controls"
	xmlns:converters="using:DevToys.UI.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:interop="using:Windows.UI.Xaml.Interop"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:regEx="using:DevToys.ViewModels.Tools.RegEx"
	xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
	NavigationCacheMode="Required"
	mc:Ignorable="d">
	<Page.Resources>
		<converters:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
		<Style x:Key="GridStyle" TargetType="toolkit:DataGridCell">
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalAlignment" Value="Top" />
		</Style>
	</Page.Resources>

	<Grid Margin="0,0,0,16" RowSpacing="12">
		<Grid.ChildrenTransitions>
			<TransitionCollection>
				<EntranceThemeTransition FromVerticalOffset="50" IsStaggeringEnabled="True" />
			</TransitionCollection>
		</Grid.ChildrenTransitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
<!--             
			<RowDefinition Height="5" />
			<RowDefinition Height="Auto" />
            -->
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<StackPanel Grid.Row="0" Spacing="4">
			<TextBlock Style="{StaticResource SubTitleTextBlock}" Text="{x:Bind Path=ViewModel.Strings.Configuration}" />

			<controls:ExpandableSettingControl Title="{x:Bind Path=ViewModel.Strings.Options}">
				<controls:ExpandableSettingControl.Icon>
					<FontIcon Glyph="&#xF6A9;" />
				</controls:ExpandableSettingControl.Icon>
				<controls:ExpandableSettingControl.ExpandableContent>
					<StackPanel HorizontalAlignment="Stretch" Spacing="0">
						<controls:ExpandableSettingControl
							Title="{x:Bind Path=ViewModel.Strings.EcmaScript}"
							CornerRadius="0,0,4,4"
							Description="{x:Bind Path=ViewModel.Strings.EcmaScriptDescription}">
							<ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.EcmaScript, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</controls:ExpandableSettingControl>
						<controls:ExpandableSettingControl
							Title="{x:Bind Path=ViewModel.Strings.CultureInvariant}"
							CornerRadius="0"
							Description="{x:Bind Path=ViewModel.Strings.CultureInvariantDescription}">
							<ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.CultureInvariant, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</controls:ExpandableSettingControl>
						<controls:ExpandableSettingControl
							Title="{x:Bind Path=ViewModel.Strings.IgnoreCase}"
							CornerRadius="0"
							Description="{x:Bind Path=ViewModel.Strings.IgnoreCaseDescription}">
							<ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.IgnoreCase, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</controls:ExpandableSettingControl>
						<controls:ExpandableSettingControl
							Title="{x:Bind Path=ViewModel.Strings.IgnoreWhitespace}"
							CornerRadius="0"
							Description="{x:Bind Path=ViewModel.Strings.IgnoreWhitespaceDescription}">
							<ToggleSwitch
								IsEnabled="{x:Bind Converter={StaticResource InvertedBooleanConverter}, Mode=OneWay, Path=ViewModel.EcmaScript}"
								IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.IgnoreWhitespace, UpdateSourceTrigger=PropertyChanged}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</controls:ExpandableSettingControl>
						<controls:ExpandableSettingControl
							Title="{x:Bind Path=ViewModel.Strings.Singleline}"
							CornerRadius="0"
							Description="{x:Bind Path=ViewModel.Strings.SinglelineDescription}">
							<ToggleSwitch
								IsEnabled="{x:Bind Converter={StaticResource InvertedBooleanConverter}, Mode=OneWay, Path=ViewModel.EcmaScript}"
								IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.Singleline, UpdateSourceTrigger=PropertyChanged}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</controls:ExpandableSettingControl>
						<controls:ExpandableSettingControl
							Title="{x:Bind Path=ViewModel.Strings.Multiline}"
							CornerRadius="0"
							Description="{x:Bind Path=ViewModel.Strings.MultilineDescription}">
							<ToggleSwitch IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.Multiline, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</controls:ExpandableSettingControl>
						<controls:ExpandableSettingControl
							Title="{x:Bind Path=ViewModel.Strings.RightToLeft}"
							CornerRadius="0"
							Description="{x:Bind Path=ViewModel.Strings.RightToLeftDescription}">
							<ToggleSwitch
								IsEnabled="{x:Bind Converter={StaticResource InvertedBooleanConverter}, Mode=OneWay, Path=ViewModel.EcmaScript}"
								IsOn="{x:Bind Mode=TwoWay, Path=ViewModel.RightToLeft, UpdateSourceTrigger=PropertyChanged}"
								Style="{StaticResource RightAlignedToggleSwitchStyle}" />
						</controls:ExpandableSettingControl>
					</StackPanel>
				</controls:ExpandableSettingControl.ExpandableContent>
			</controls:ExpandableSettingControl>
		</StackPanel>

		<controls:CustomTextBox
			Grid.Row="1"
			Header="{x:Bind Path=ViewModel.Strings.RegularExpression}"
			Text="{x:Bind Mode=TwoWay, Path=ViewModel.RegularExpression, UpdateSourceTrigger=PropertyChanged}" />

		<controls:CustomTextBox
			x:Name="MatchTextBox"
			Grid.Row="2"
			MinHeight="150"
			Margin="0,0,0,0"
			AcceptsReturn="True"
			Header="{x:Bind Path=ViewModel.Strings.Text}"
			IsRichTextEdit="True"
			Text="{x:Bind Mode=TwoWay, Path=ViewModel.Text, UpdateSourceTrigger=PropertyChanged}" />
        <!--
		<toolkit:GridSplitter
			Grid.Row="3"
			Height="5"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Center"
			Background="Black" />

		<StackPanel Grid.Row="4" Spacing="4">
			<TextBlock Style="{StaticResource SubTitleTextBlock}" Text="Replacement" />

			<controls:ExpandableSettingControl Title="Replacement Pattern">
				<controls:ExpandableSettingControl.Icon>
					<FontIcon Glyph="&#xF18D;" />
				</controls:ExpandableSettingControl.Icon>
				<controls:ExpandableSettingControl.ExpandableContent>
					<Grid
						x:Name="RootGrid"
						Margin="0,0,0,16"
						RowSpacing="12">
						<Grid.ChildrenTransitions>
							<TransitionCollection>
								<EntranceThemeTransition FromVerticalOffset="50" IsStaggeringEnabled="True" />
							</TransitionCollection>
						</Grid.ChildrenTransitions>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>


						<controls:CustomTextBox
							Grid.Row="0"
							MinHeight="150"
							AcceptsReturn="True"
							Header="{x:Bind ViewModel.Strings.InputTitle}"
							Text="{x:Bind ViewModel.InputValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

						<controls:CustomTextBox
							Grid.Row="1"
							MinHeight="150"
							AcceptsReturn="True"
							Header="{x:Bind ViewModel.Strings.OutputTitle}"
							IsReadOnly="True"
							Text="{x:Bind ViewModel.OutputValue, Mode=OneWay}" />

					</Grid>
				</controls:ExpandableSettingControl.ExpandableContent>
			</controls:ExpandableSettingControl>
		</StackPanel>
-->
		<controls1:ItemsRepeater Grid.Row="3" ItemsSource="{x:Bind ViewModel.MatchGroups, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
			<DataTemplate x:DataType="regEx:MatchDetails2[]">
				<toolkit:DataGrid
					x:Name="MatchDetails"
					Grid.Row="5"
					AutoGenerateColumns="False"
					BorderThickness="1"
					CellStyle="{StaticResource GridStyle}"
					GridLinesVisibility="All"
					HeadersVisibility="None"
					IsReadOnly="True"
					ItemsSource="{x:Bind Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<toolkit:DataGrid.Columns>
						<toolkit:DataGridTextColumn MinWidth="200" Binding="{Binding Title}" />
						<toolkit:DataGridTextColumn MinWidth="70" Binding="{Binding Range}" />
						<toolkit:DataGridTextColumn Width="*" Binding="{Binding Value}" />
					</toolkit:DataGrid.Columns>
				</toolkit:DataGrid>
			</DataTemplate>
		</controls1:ItemsRepeater>

		<TextBlock Grid.Row="4" Text="{x:Bind Path=ViewModel.ErrorMsg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

	</Grid>
</Page>
