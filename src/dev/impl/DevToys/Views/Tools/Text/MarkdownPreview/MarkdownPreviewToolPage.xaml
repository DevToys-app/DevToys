<Page
    x:Class="DevToys.Views.Tools.MarkdownPreview.MarkdownPreviewToolPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:DevToys.UI.Controls"
    xmlns:ex="using:DevToys.UI.Extensions"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:winxaml="using:Windows.UI.Xaml"
    mc:Ignorable="d"
    NavigationCacheMode="Required">
    <Page.Resources>
        <winxaml:ApplicationTheme x:Key="Light">Light</winxaml:ApplicationTheme>
        <winxaml:ApplicationTheme x:Key="Dark">Dark</winxaml:ApplicationTheme>
    </Page.Resources>

    <Grid Margin="0,0,0,16" RowSpacing="12">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <ex:IsCompactOverlayModeTrigger TargetElement="{x:Bind}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SettingsStackPanel.Visibility" Value="Collapsed"/>
                        <Setter Target="VerticalGridSplitter.Visibility" Value="Collapsed"/>
                        <Setter Target="HorizontalGridSplitter.Visibility" Value="Visible"/>
                        <Setter Target="InputCodeEditor.(Grid.Row)" Value="0" />
                        <Setter Target="InputCodeEditor.(Grid.RowSpan)" Value="1" />
                        <Setter Target="InputCodeEditor.(Grid.Column)" Value="0" />
                        <Setter Target="InputCodeEditor.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="OutputContentControl.(Grid.Row)" Value="2" />
                        <Setter Target="OutputContentControl.(Grid.RowSpan)" Value="1" />
                        <Setter Target="OutputContentControl.(Grid.Column)" Value="0" />
                        <Setter Target="OutputContentControl.(Grid.ColumnSpan)" Value="3" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True" FromVerticalOffset="50"/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel
            x:Name="SettingsStackPanel"
            Grid.Row="0"
            Spacing="4">
            <TextBlock Style="{StaticResource SubTitleTextBlock}" Text="{x:Bind ViewModel.Strings.Configuration}" />

            <controls:ExpandableSettingControl
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Title="{x:Bind ViewModel.Strings.Theme}"
                Description="{x:Bind ViewModel.Strings.ThemeDescription}">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#xF592;" />
                </controls:ExpandableSettingControl.Icon>
                <ComboBox
                    SelectedValuePath="Tag"
                    SelectedValue="{x:Bind ViewModel.Theme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Tag="{StaticResource Light}" Content="{x:Bind ViewModel.Strings.Light}"/>
                    <ComboBoxItem Tag="{StaticResource Dark}" Content="{x:Bind ViewModel.Strings.Dark}"/>
                </ComboBox>
            </controls:ExpandableSettingControl>
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="100"/>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="100"/>
                <RowDefinition Height="16"/>
                <RowDefinition MinHeight="100"/>
            </Grid.RowDefinitions>

            <controls:CodeEditor
                x:Name="InputCodeEditor"
                Grid.Column="0"
                Grid.Row="0"
                Grid.RowSpan="3"
                Header="{x:Bind ViewModel.Strings.Input}"
                SettingsProvider="{x:Bind ViewModel.SettingsProvider}"
                Text="{x:Bind ViewModel.InputValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                CodeLanguage="markdown"/>

            <toolkit:GridSplitter
                x:Name="VerticalGridSplitter"
                Grid.Column="1"
                Grid.Row="0"
                Grid.RowSpan="3"
                Width="16"
                Margin="0,42,0,0"
                ResizeBehavior="BasedOnAlignment"
                ResizeDirection="Columns">
                <toolkit:GridSplitter.Element>
                    <FontIcon
                        Glyph="&#xFD55;"
                        FontSize="13"/>
                </toolkit:GridSplitter.Element>
            </toolkit:GridSplitter>

            <toolkit:GridSplitter
                x:Name="HorizontalGridSplitter"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Height="16"
                ResizeBehavior="BasedOnAlignment"
                ResizeDirection="Rows"
                Visibility="Collapsed">
                <toolkit:GridSplitter.Element>
                    <FontIcon
                        Glyph="&#xFD52;"
                        FontSize="13"/>
                </toolkit:GridSplitter.Element>
            </toolkit:GridSplitter>

            <toolkit:HeaderedContentControl
                x:Name="OutputContentControl"
                Grid.Column="2"
                Grid.Row="0"
                Grid.RowSpan="3"
                Margin="0,0,0,0"
                MinHeight="150"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch">
                <toolkit:HeaderedContentControl.Header>
                    <toolkit:DockPanel>
                        <TextBlock VerticalAlignment="Bottom" Text="{x:Bind ViewModel.Strings.Output}"></TextBlock>
                        <Button
                            x:Name="CopyButton"
                            TabIndex="2"
                            HorizontalAlignment="Right"
                            AutomationProperties.Name="{Binding Instance.Common.Copy, Mode=OneTime, Source={StaticResource LanguageManager}}"
                            Command="{x:Bind ViewModel.CopyHtmlCommand}">
                            <StackPanel Orientation="Horizontal" Spacing="4">
                                <FontIcon Glyph="&#xF32B;"/>
                                <TextBlock VerticalAlignment="Center" Text="{Binding Instance.Common.Copy, Mode=OneTime, Source={StaticResource LanguageManager}}"/>
                            </StackPanel>
                        </Button>
                    </toolkit:DockPanel>
                </toolkit:HeaderedContentControl.Header>
                <Border
                    CornerRadius="4"
                    Margin="0,8,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <WebView
                        x:Name="PreviewWebView"
                        DefaultBackgroundColor="Transparent"/>
                </Border>
            </toolkit:HeaderedContentControl>
        </Grid>
    </Grid>
</Page>
