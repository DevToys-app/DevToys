<UserControl
    x:Class="DevToys.Views.Tools.EncodersDecoders.JwtDecoderEncoder.JwtDecoderControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DevToys.Views.Tools.EncodersDecoders.JwtDecoderEncoder"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:DevToys="using:DevToys"
    xmlns:controls="using:DevToys.UI.Controls"
    xmlns:converters="using:DevToys.UI.Converters">

    <UserControl.Resources>
        <converters:NullToBooleanConverter x:Name="NullToVisible" IsInverted="True"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" IsInverted="True"/>
        <DevToys:LanguageManager x:Key="LanguageManager"/>
        <Style x:Key="GridSettingBlockStyle" TargetType="Grid">
            <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
            <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}" />
        </Style>

        <!-- Details row template for Claims info DataGrid -->
        <DataTemplate x:Key="InfoDataGridRowDetailsTemplate">
            <!-- Need a border because TextBlock doesn't have background -->
            <Border Background="{ThemeResource TextControlBackgroundFocused}">
                <TextBlock
                    Text="{Binding Description}"
                    Padding="20,10,10,10"
                    TextWrapping="Wrap"/>
            </Border>
        </DataTemplate>
    </UserControl.Resources>

    <Grid x:Name="JwtDecoderGrid" Margin="0,0,0,16" RowSpacing="12">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True" FromVerticalOffset="50"/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="100"/>
            <ColumnDefinition Width="16"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="100"/>
            <RowDefinition Height="*" MinHeight="300"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel
            x:Name="SettingsStackPanel"
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Spacing="4">
            <controls:ExpandableSettingControl
                Title="{x:Bind ViewModel.LocalizedStrings.DecodeValidateTokenLabel}"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Stretch">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#xF29D;" />
                </controls:ExpandableSettingControl.Icon>
                <ToggleSwitch
                Style="{StaticResource RightAlignedToggleSwitchStyle}"
                OffContent="{x:Bind ViewModel.LocalizedStrings.DecodeValidateTokenNoLabel}" OnContent="{x:Bind ViewModel.LocalizedStrings.DecodeValidateTokenYesLabel}"
                IsOn="{x:Bind ViewModel.ValidateSignature, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </controls:ExpandableSettingControl>
            <controls:ExpandableSettingControl
                Title="{x:Bind ViewModel.LocalizedStrings.DecodeValidationSettingsTitle}"
                Description="{x:Bind ViewModel.LocalizedStrings.DecodeValidationSettingsDescription}"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Visibility="{x:Bind ViewModel.ShowValidation, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#x0160;" />
                </controls:ExpandableSettingControl.Icon>
                <controls:ExpandableSettingControl.ExpandableContent>
                    <StackPanel Padding="6" Spacing="4" HorizontalAlignment="Stretch">
                        <controls:ExpandableSettingControl
                            Title="{x:Bind ViewModel.LocalizedStrings.DecodeValidateIssuerSigningKey}">
                            <controls:ExpandableSettingControl.Icon>
                                <FontIcon Glyph="&#xF283;" />
                            </controls:ExpandableSettingControl.Icon>
                            <ToggleSwitch 
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" 
                                IsOn="{x:Bind ViewModel.ValidateIssuerSigningKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind ViewModel.LocalizedStrings.DecodeValidateIssuerLabel}">
                            <controls:ExpandableSettingControl.Icon>
                                <FontIcon Glyph="&#xF283;" />
                            </controls:ExpandableSettingControl.Icon>
                            <ToggleSwitch 
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" 
                                IsOn="{x:Bind ViewModel.ValidateIssuer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <controls:ExpandableSettingControl.ExpandableContent>
                                <StackPanel Padding="12" Spacing="4" HorizontalAlignment="Stretch">
                                    <controls:CustomTextBox 
                                        Header="{x:Bind ViewModel.LocalizedStrings.ValidIssuersLabel}"
                                        Text="{x:Bind ViewModel.ValidIssuers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        LostFocus="{x:Bind ViewModel.InputFocusChanged}" />
                                </StackPanel>
                            </controls:ExpandableSettingControl.ExpandableContent>
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl 
                            Title="{x:Bind ViewModel.LocalizedStrings.DecodeValidateAudienceLabel}">
                            <controls:ExpandableSettingControl.Icon>
                                <FontIcon Glyph="&#xF283;" />
                            </controls:ExpandableSettingControl.Icon>
                            <ToggleSwitch
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" 
                                IsOn="{x:Bind ViewModel.ValidateAudience, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <controls:ExpandableSettingControl.ExpandableContent>
                                <StackPanel Padding="12" Spacing="4" HorizontalAlignment="Stretch">
                                    <controls:CustomTextBox 
                                        Header="{x:Bind ViewModel.LocalizedStrings.ValidAudiencesLabel}"
                                        Text="{x:Bind ViewModel.ValidAudiences, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        LostFocus="{x:Bind ViewModel.InputFocusChanged}" />
                                </StackPanel>
                            </controls:ExpandableSettingControl.ExpandableContent>                            
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind ViewModel.LocalizedStrings.DecodeValidateLifetimeLabel}">
                            <controls:ExpandableSettingControl.Icon>
                                <FontIcon Glyph="&#xF283;" />
                            </controls:ExpandableSettingControl.Icon>
                            <ToggleSwitch 
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" 
                                IsOn="{x:Bind ViewModel.ValidateLifetime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </controls:ExpandableSettingControl>
                        <controls:ExpandableSettingControl
                            Title="{x:Bind ViewModel.LocalizedStrings.DecodeValidateActorLabel}">
                            <controls:ExpandableSettingControl.Icon>
                                <FontIcon Glyph="&#xF283;" />
                            </controls:ExpandableSettingControl.Icon>
                            <ToggleSwitch 
                                Style="{StaticResource RightAlignedToggleSwitchStyle}" 
                                IsOn="{x:Bind ViewModel.ValidateActor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </controls:ExpandableSettingControl>
                    </StackPanel>
                </controls:ExpandableSettingControl.ExpandableContent>
            </controls:ExpandableSettingControl>
        </StackPanel>
        <muxc:InfoBar 
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Severity="{Binding Severity}"
            Message="{Binding Message, Mode=OneWay}"
            IsOpen="{Binding Mode=OneWay, Converter={StaticResource NullToVisible}}"
            DataContext="{x:Bind ViewModel.ValidationResult, Mode=OneWay}"
            Visibility="{x:Bind ViewModel.ShowValidation, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
            IsClosable="False"/>
        <controls:CodeEditor
            x:Name="TokenCodeEditor"
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Header="{x:Bind ViewModel.LocalizedStrings.JwtTokenLabel}"
            Text="{x:Bind ViewModel.Token, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            CodeLanguage="text"
            IsReadOnly="False" />
        <controls:CodeEditor
            x:Name="HeaderCodeEditor"
            Grid.Row="3"
            Grid.Column="0"
            Header="{x:Bind ViewModel.LocalizedStrings.JwtHeaderLabel}"
            Text="{x:Bind ViewModel.Header, Mode=OneWay}"
            CodeLanguage="json"
            IsReadOnly="True"/>
        <toolkit:GridSplitter
            x:Name="verticalGridSplitter"
            Grid.Row="3"
            Grid.Column="1"
            ResizeBehavior="BasedOnAlignment"
            ResizeDirection="Columns">
            <toolkit:GridSplitter.Element>
                <FontIcon
                    Glyph="&#xFD55;"
                    FontSize="13"/>
            </toolkit:GridSplitter.Element>
        </toolkit:GridSplitter>
        <controls:CodeEditor
            x:Name="PayloadCodeEditor"
            Grid.Row="3"
            Grid.Column="2"
            MinHeight="150"
            Header="{x:Bind ViewModel.LocalizedStrings.JwtPayloadLabel}"
            Text="{x:Bind ViewModel.Payload, Mode=OneWay}"
            CodeLanguage="json"
            IsReadOnly="True"
            AllowExpand="True"
            ExpandedChanged="PayloadCodeEditor_ExpandedChanged">
            <controls:CodeEditor.InfoContent>
                <Border
                    BorderThickness="1" 
                    BorderBrush="{ThemeResource TextControlBorderBrush}" 
                    CornerRadius="{ThemeResource ControlCornerRadius}"
                    Background="{ThemeResource TextControlBackground}">
                    <toolkit:DataGrid
                        AutoGenerateColumns="False"
                        ItemsSource="{x:Bind ViewModel.Claims, Mode=OneWay}"
                        AlternatingRowBackground="{ThemeResource TextControlButtonBackgroundPressed}"
                        RowDetailsTemplate="{StaticResource InfoDataGridRowDetailsTemplate}"
                        FontFamily="{x:Bind InfoDataGridFontFamily, Mode=OneWay}">
                        <toolkit:DataGrid.Resources>
                            <!-- This key just has to exist to remove the default coloring of the column headers and make them look like the rows. -->
                            <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundColor"/>
                        </toolkit:DataGrid.Resources>
                        <!-- Claims Type column -->
                        <toolkit:DataGrid.Columns>
                            <toolkit:DataGridTextColumn Header="{x:Bind ViewModel.LocalizedStrings.Type}" Width="*" Binding="{Binding Type}">
                                <toolkit:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </toolkit:DataGridTextColumn.ElementStyle>
                            </toolkit:DataGridTextColumn>
                            <!--Claims Value column-->
                            <toolkit:DataGridTextColumn Header="{x:Bind ViewModel.LocalizedStrings.Value}" Width="2*" Binding="{Binding Value}">
                                <toolkit:DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </toolkit:DataGridTextColumn.ElementStyle>
                            </toolkit:DataGridTextColumn>
                        </toolkit:DataGrid.Columns>
                    </toolkit:DataGrid>
                </Border>
            </controls:CodeEditor.InfoContent>
        </controls:CodeEditor>
        <Grid
            x:Name="SignatureGrid"
            Grid.Row="4"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            RowSpacing="0"
            Visibility="{x:Bind ViewModel.ShowValidation, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <controls:CustomTextBox
                Header="{x:Bind ViewModel.LocalizedStrings.SignatureLabel}"
                Grid.Row="0"
                MinHeight="150"
                AcceptsReturn="True"
                Text="{x:Bind ViewModel.Signature, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{x:Bind ViewModel.RequireSignature, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <controls:CustomTextBox
                Header="{x:Bind ViewModel.LocalizedStrings.PublicKeyLabel}"
                Grid.Row="0"
                MinHeight="150"
                AcceptsReturn="True"
                Text="{x:Bind ViewModel.PublicKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{x:Bind ViewModel.RequireSignature, Mode=OneWay, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
        </Grid>
    </Grid>
</UserControl>
