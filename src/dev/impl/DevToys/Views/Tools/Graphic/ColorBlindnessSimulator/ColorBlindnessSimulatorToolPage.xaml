<Page
    x:Class="DevToys.Views.Tools.ColorBlindnessSimulator.ColorBlindnessSimulatorToolPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DevToys.Views.Tools.ColorBlindnessSimulator"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:DevToys.UI.Converters"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d"
    NavigationCacheMode="Required">
    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Name="BooleanToVisibilityConverter"/>
    </Page.Resources>

    <Grid Margin="0,0,0,16" RowSpacing="12">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="SelectFilesPointerHover">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsSelectFilesAreaHighlithed, Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SelectFilesRectangle.Stroke" Value="{ThemeResource TextControlHeaderForeground}" />
                        <Setter Target="SelectFilesRectangle.Fill" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True" FromVerticalOffset="50"/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid
            Grid.Row="0"
            Margin="0,12,0,0"
            AllowDrop="True"
            Background="Transparent"
            CornerRadius="4">
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="DragOver">
                    <core:InvokeCommandAction
                        Command="{x:Bind ViewModel.SelectFilesAreaDragOverCommand}"/>
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="DragLeave">
                    <core:InvokeCommandAction
                        Command="{x:Bind ViewModel.SelectFilesAreaDragLeaveCommand}"/>
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="Drop">
                    <core:InvokeCommandAction
                        Command="{x:Bind ViewModel.SelectFilesAreaDragDropCommand}"/>
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <Rectangle
                x:Name="SelectFilesRectangle"
                Stroke="{ThemeResource TextControlHeaderForegroundDisabled}"
                StrokeDashArray="4 4"
                StrokeThickness="2"
                Fill="Transparent">
            </Rectangle>
            <StackPanel
                Spacing="8"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Margin="24">
                <TextBlock
                    Text="{x:Bind ViewModel.Strings.SelectFilesInstruction1}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="WrapWholeWords"
                    HorizontalAlignment="Center"/>
                <TextBlock
                    Text="{x:Bind ViewModel.Strings.SelectFilesInstruction2}"
                    HorizontalAlignment="Center"/>
                <StackPanel
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Spacing="6">
                    <Button
                        x:Name="BrowseFileButton"
                        Style="{StaticResource AccentButtonStyle}"
                        VerticalAlignment="Center"
                        MinWidth="100"
                        Content="{x:Bind ViewModel.Strings.SelectFilesInstruction3}"
                        Command="{x:Bind ViewModel.SelectFilesBrowseCommand}"/>
                    <TextBlock
                        Text="/"
                        VerticalAlignment="Center"/>
                    <Button
                        Style="{StaticResource AccentButtonStyle}"
                        VerticalAlignment="Center"
                        MinWidth="100"
                        Content="{x:Bind ViewModel.Strings.SelectFilesInstruction4}"
                        Command="{x:Bind ViewModel.SelectFilesPasteCommand}"/>
                </StackPanel>
                <TextBlock
                    Text="{x:Bind ViewModel.Strings.InvalidSelectedFiles}"
                    HorizontalAlignment="Center"
                    FontSize="11"
                    Foreground="Red"
                    Visibility="{x:Bind ViewModel.HasInvalidFilesSelected, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </Grid>

        <Grid
            Grid.Row="1"
            RowSpacing="12"
            ColumnSpacing="12"
            Visibility="{x:Bind ViewModel.IsResultGridVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <local:ImagePreview
                Grid.Row="0"
                Grid.Column="0"
                Header="{x:Bind ViewModel.Strings.OriginalPicture}"
                Source="{x:Bind ViewModel.OriginalOutput, Mode=OneWay}"/>

            <local:ImagePreview
                Grid.Row="0"
                Grid.Column="1"
                Header="{x:Bind ViewModel.Strings.ProtanopiaSimulation}"
                Source="{x:Bind ViewModel.ProtanopiaOutput, Mode=OneWay}"/>

            <local:ImagePreview
                Grid.Row="1"
                Grid.Column="0"
                Header="{x:Bind ViewModel.Strings.TritanopiaSimulation}"
                Source="{x:Bind ViewModel.TritanopiaOutput, Mode=OneWay}"/>

            <local:ImagePreview
                Grid.Row="1"
                Grid.Column="1"
                Header="{x:Bind ViewModel.Strings.DeuteranopiaSimulation}"
                Source="{x:Bind ViewModel.DeuteranopiaOutput, Mode=OneWay}"/>
        </Grid>

        <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.IsProgressGridVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <muxc:ProgressRing
                Height="64"
                Width="64"
                IsIndeterminate="False"
                Value="{x:Bind ViewModel.Progress, Mode=OneWay}"/>
            <Button
                Style="{StaticResource CommandBarFlyoutEllipsisButtonStyle}"
                Margin="3,-1,0,0"
                Command="{x:Bind ViewModel.CancelCommand}"
                ToolTipService.ToolTip="{x:Bind ViewModel.Strings.Cancel}"
                AutomationProperties.Name="{x:Bind ViewModel.Strings.Cancel}">
                <FontIcon Glyph="&#xF75A;"/>
            </Button>
        </Grid>

    </Grid>
</Page>
