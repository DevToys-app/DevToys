<Page
    x:Class="DevToys.Views.Tools.CronParser.CronParserToolPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls="using:DevToys.UI.Controls"
    xmlns:ex="using:DevToys.UI.Extensions"
    mc:Ignorable="d"
    d:DesignHeight="400"
    d:DesignWidth="600">

    <Grid Margin="0,0,0,16" RowSpacing="12">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <ex:IsCompactOverlayModeTrigger TargetElement="{x:Bind}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SubTitleTextBlock.Visibility" Value="Collapsed"/>
                        <Setter Target="CronMode.Visibility" Value="Collapsed"/>
                        <Setter Target="OutputLimit.Visibility" Value="Collapsed"/>
                        <Setter Target="OutputDateTimeSetting.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True" FromVerticalOffset="50"/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <StackPanel Grid.Row="0" Spacing="4" >

            <muxc:InfoBar
                Severity="Warning"
                Message="{x:Bind ViewModel.Strings.CronErrorMessage}"
                IsOpen="{x:Bind ViewModel.IsInputInvalid, Mode=OneWay}"
                IsClosable="False"/>

            <muxc:InfoBar
                Severity="Warning"
                Message="{x:Bind ViewModel.Strings.OutputFormatErrorMessage}"
                IsOpen="{x:Bind ViewModel.IsOutputFormatInvalid, Mode=OneWay}"
                IsClosable="False"/>

            <TextBlock x:Name="SubTitleTextBlock" Style="{StaticResource SubTitleTextBlock}" Text="{x:Bind ViewModel.Strings.Configuration}" />
            
            <controls:ExpandableSettingControl
                x:Name="CronMode"                
                Title="{x:Bind ViewModel.Strings.UseSecondsTitle}"
                Description="{x:Bind ViewModel.Strings.UseSecondsDescription}">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#xF18D;" />
                </controls:ExpandableSettingControl.Icon>
                <ToggleSwitch 
                    Style="{StaticResource RightAlignedToggleSwitchStyle}"
                    OnContent="{x:Bind ViewModel.Strings.SecondsIncludedMode}" OffContent="{x:Bind ViewModel.Strings.SecondsExcludedMode}"
                    IsOn="{x:Bind ViewModel.IncludeSecondsMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </controls:ExpandableSettingControl>
            <controls:ExpandableSettingControl
                x:Name="OutputLimit"               
                Title="{x:Bind ViewModel.Strings.OutputLimitTitle}"
                Description="{x:Bind ViewModel.Strings.OutputLimitDescription}">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#xf7ed;" />
                </controls:ExpandableSettingControl.Icon>
                <ComboBox
                    SelectedValuePath="Tag"
                    SelectedValue="{x:Bind ViewModel.OutputLimitMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Tag="5" Content="5" />
                    <ComboBoxItem Tag="10" Content="10" />
                    <ComboBoxItem Tag="25" Content="25" />
                    <ComboBoxItem Tag="50" Content="50" />
                    <ComboBoxItem Tag="100" Content="100" />
                </ComboBox>
            </controls:ExpandableSettingControl>
            <controls:ExpandableSettingControl
                x:Name="OutputDateTimeSetting"
                Title="{x:Bind ViewModel.Strings.OutputDateTimeTitle}"
                Description="{x:Bind ViewModel.Strings.OutputDateTimeDescription}">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#xF7E4;" />
                </controls:ExpandableSettingControl.Icon>
                <TextBox MinWidth="150" Text="{x:Bind ViewModel.OutputDateTimeFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </controls:ExpandableSettingControl>
        </StackPanel>

        <controls:CustomTextBox
             Grid.Row="1"
             Header="{x:Bind ViewModel.Strings.InputTitle}"
             Text="{x:Bind ViewModel.UserCronExpression, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
             Tag="UserCronExpression"/>

        <controls:CustomTextBox
            Grid.Row="2"
            IsReadOnly="True"
            AcceptsReturn="True"
            IsRichTextEdit="False"
            Header="{x:Bind ViewModel.Strings.DescriptionTitle}"
            Text="{x:Bind ViewModel.CronDescription, Mode=OneWay}"/>

        <controls:CustomTextBox
             Grid.Row="3"
             MinHeight="250"
             IsReadOnly="True"            
             AcceptsReturn="True"
             IsRichTextEdit="False"            
             Header="{x:Bind ViewModel.Strings.OutputTitle}"
             Text="{x:Bind ViewModel.OutputValue, Mode=OneWay}"/>
    </Grid>
</Page>
