<Page
    x:Class="DevToys.Views.Tools.LoremIpsumGenerator.LoremIpsumGeneratorToolPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:DevToys.UI.Controls"
    xmlns:ex="using:DevToys.UI.Extensions"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    NavigationCacheMode="Required">

    <Grid Margin="0,0,0,16" RowSpacing="12">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <ex:IsCompactOverlayModeTrigger TargetElement="{x:Bind}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SettingsStackPanel.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True" FromVerticalOffset="50"/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel
            x:Name="SettingsStackPanel"
            Grid.Row="0"
            Spacing="4">
            <TextBlock Style="{StaticResource SubTitleTextBlock}" Text="{x:Bind ViewModel.Strings.Configuration}"></TextBlock>

            <controls:ExpandableSettingControl
                TabIndex="0"
                Title="{x:Bind ViewModel.Strings.TypeTitle}"
                Description="{x:Bind ViewModel.Strings.TypeDescription}">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#x0032;"/>
                </controls:ExpandableSettingControl.Icon>
                <ComboBox
                    SelectedValuePath="Tag"
                    SelectedValue="{x:Bind ViewModel.LoremIpsumType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Tag="Words" Content="{x:Bind ViewModel.Strings.WordsType}" />
                    <ComboBoxItem Tag="Sentences" Content="{x:Bind ViewModel.Strings.SentencesType}" />
                    <ComboBoxItem Tag="Paragraphs" Content="{x:Bind ViewModel.Strings.ParagraphsType}" />
                </ComboBox>
            </controls:ExpandableSettingControl>
            <controls:ExpandableSettingControl
                TabIndex="0"
                Title="{x:Bind ViewModel.Strings.LengthTitle}"
                Description="{x:Bind ViewModel.Strings.LengthDescription}">
                <controls:ExpandableSettingControl.Icon>
                    <FontIcon Glyph="&#x018A;"/>
                </controls:ExpandableSettingControl.Icon>
                <muxc:NumberBox
                    Minimum="1"
                    SmallChange="1"
                    LargeChange="5"
                    SpinButtonPlacementMode="Compact"
                    Value="{x:Bind ViewModel.LoremIpsumLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </controls:ExpandableSettingControl>
            <controls:ExpandableSettingControl
                x:Name="StartWithLoremIpsumSetting"
                TabIndex="0"
                Title="{x:Bind ViewModel.Strings.StartWithLoremTitle}">
              <controls:ExpandableSettingControl.Icon>
                <FontIcon Glyph="&#xF6A9;" />
              </controls:ExpandableSettingControl.Icon>
              <ToggleSwitch
                  Style="{StaticResource RightAlignedToggleSwitchStyle}"
                  IsOn="{x:Bind ViewModel.StartWithLorem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </controls:ExpandableSettingControl>
        </StackPanel>

        <controls:CustomTextBox
            x:Name="OutputTextBox"
            Grid.Row="1"
            TabIndex="3"
            IsReadOnly="True"
            Header="{x:Bind ViewModel.Strings.Output}"
            MinHeight="150"
            AcceptsReturn="True"
            CanClearWhenReadOnly="True"
            RefreshCommand="{x:Bind ViewModel.RefreshCommand}"
            Text="{x:Bind ViewModel.Output, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></controls:CustomTextBox>
    </Grid>
</Page>
