<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessibleName" xml:space="preserve">
    <value>JWT Kodlama ve Çözümleme aracı</value>
  </data>
  <data name="MenuDisplayName" xml:space="preserve">
    <value>JWT</value>
  </data>
  <data name="JwtHeaderLabel" xml:space="preserve">
    <value>Başlık</value>
  </data>
  <data name="JwtTokenLabel" xml:space="preserve">
    <value>Belirteç</value>
  </data>
  <data name="JwtPayloadLabel" xml:space="preserve">
    <value>Yük</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tür</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Değer</value>
  </data>
  <data name="DescriptionHeader" xml:space="preserve">
    <value>Açıklama</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>JWT başlığını, yükünü ve imzasını çözümle</value>
  </data>
  <data name="SearchKeywords" xml:space="preserve">
    <value/>
  </data>
  <data name="Algorithm" xml:space="preserve">
    <value>Algoritma</value>
  </data>
  <data name="DecodeSwitchModeLabel" xml:space="preserve">
    <value>Çöz</value>
  </data>
  <data name="DecodeValidateTokenLabel" xml:space="preserve">
    <value>Erişim Anahtarını Doğrula</value>
  </data>
  <data name="DecodeValidateTokenNoLabel" xml:space="preserve">
    <value>Hayır</value>
  </data>
  <data name="DecodeValidateTokenYesLabel" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="EncodeExpirationTitle" xml:space="preserve">
    <value>Jetonda tükenme noktası var</value>
  </data>
  <data name="EncodeExpirationMonthLabel" xml:space="preserve">
    <value>Ay(lar) içinde sona erme</value>
  </data>
  <data name="EncodeExpirationYearLabel" xml:space="preserve">
    <value>Yıl(lar) içinde sona erme</value>
  </data>
  <data name="EncodeHashingTitle" xml:space="preserve">
    <value>Jeton hash'leme algoritması</value>
  </data>
  <data name="EncodeSettingsTitle" xml:space="preserve">
    <value>Ayarlar</value>
  </data>
  <data name="EncodeSwitchModeLabel" xml:space="preserve">
    <value>Kodla</value>
  </data>
  <data name="SettingsSwitchModeLabel" xml:space="preserve">
    <value>Kodlayıcı / Çözümleyici</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Konfigürasyon</value>
  </data>
  <data name="EncodeDefaultTimeTitle" xml:space="preserve">
    <value>Jetonda varsayılan zaman var</value>
  </data>
  <data name="EncodeExpirationDaysLabel" xml:space="preserve">
    <value>Gün(ler) içinde sona erme</value>
  </data>
  <data name="EncodeExpirationHoursLabel" xml:space="preserve">
    <value>Saat(ler) içinde sona erme</value>
  </data>
  <data name="EncodeExpirationMinutesLabel" xml:space="preserve">
    <value>Dakika(lar) içinde sona erme</value>
  </data>
  <data name="PrivateKeyLabel" xml:space="preserve">
    <value>Özel Anahtar</value>
  </data>
  <data name="SignatureLabel" xml:space="preserve">
    <value>İmza</value>
  </data>
  <data name="JwtNotValidated" xml:space="preserve">
    <value>Belirteç doğrulanmadı (hiçbir parametre seçilmedi)</value>
  </data>
  <data name="JwtIsValidMessage" xml:space="preserve">
    <value>Belirteç Onaylandı</value>
  </data>
  <data name="InvalidPublicKeyError" xml:space="preserve">
    <value>Geçersiz Ortak Anahtar</value>
  </data>
  <data name="JwtInValidMessage" xml:space="preserve">
    <value>Geçersiz İmza</value>
  </data>
  <data name="DecodeValidateActorLabel" xml:space="preserve">
    <value>Aktörü doğrula</value>
  </data>
  <data name="DecodeValidateAudienceLabel" xml:space="preserve">
    <value>Seyirciyi doğrula</value>
  </data>
  <data name="DecodeValidateIssuerSigningKey" xml:space="preserve">
    <value>Veren imza anahtarını doğrula</value>
  </data>
  <data name="DecodeValidateIssuerLabel" xml:space="preserve">
    <value>Sağlayıcıyı doğrula</value>
  </data>
  <data name="DecodeValidateLifetimeLabel" xml:space="preserve">
    <value>Varlık süresini doğrula</value>
  </data>
  <data name="ValidAudiencesLabel" xml:space="preserve">
    <value>Geçerli seyirciler</value>
  </data>
  <data name="ValidIssuersLabel" xml:space="preserve">
    <value>Geçerli sağlayıcılar</value>
  </data>
  <data name="DecodeValidationSettingsDescription" xml:space="preserve">
    <value>Hangi belirteç parametrelerinin doğrulanacağını seçin</value>
  </data>
  <data name="DecodeValidationSettingsTitle" xml:space="preserve">
    <value>Jeton doğrulama ayarları</value>
  </data>
  <data name="ValidAudiencesError" xml:space="preserve">
    <value>Geçerli seyirciler boş</value>
  </data>
  <data name="ValidIssuersError" xml:space="preserve">
    <value>Geçerli sağlayıcılar boş</value>
  </data>
  <data name="PublicKeyIsPrivateKeyError" xml:space="preserve">
    <value>Sağlanan genel anahtar özel bir anahtardır</value>
  </data>
  <data name="EncodeAudienceLabel" xml:space="preserve">
    <value>Jetonda seyirci var</value>
  </data>
  <data name="EncodeIssuerLabel" xml:space="preserve">
    <value>Jetonda sağlayıcı var</value>
  </data>
  <data name="EncodeSettingsDescription" xml:space="preserve">
    <value>Jeton parametrelerini seçin</value>
  </data>
  <data name="InvalidPrivateKeyError" xml:space="preserve">
    <value>Geçersiz Özel Anahtar</value>
  </data>
  <data name="PublicKeyLabel" xml:space="preserve">
    <value>Genel Anahtar</value>
  </data>
  <data name="SearchDisplayName" xml:space="preserve">
    <value>JWT Kodlayıcı / Çözümleyici</value>
  </data>
  <data name="InvalidSignatureError" xml:space="preserve">
    <value>Geçersiz İmza</value>
  </data>
  <data name="NoDescription" xml:space="preserve">
    <value>Açıklama yok</value>
  </data>
  <data name="iss" xml:space="preserve">
    <value>"iss" (issuer) claim, JWT'yi veren yetkilinin kim olduğunu belirler. Bu claim'ın işlenmesi genellikle uygulamaya özgüdür. "iss" değeri, StringOrURI değeri içeren büyük-küçük harf duyarlı bir dizedir. Bu claim kullanımı İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="sub" xml:space="preserve">
    <value>"sub" (subject) claim, JWT'nin konusu olan başlığı belirler. Bir JWT içindeki iddialar genellikle konu hakkında ifadelerdir. Konu değeri, genellikle veren tarafın bağlamında yerel olarak benzersiz olması gereken veya küresel olarak benzersiz olması gereken bir şekilde olmalıdır. Bu iddianın işlenmesi genellikle uygulamaya özgüdür. "sub" değeri, StringOrURI değeri içeren büyük-küçük harf duyarlı bir dizedir. Bu iddia kullanımı İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="aud" xml:space="preserve">
    <value>"aud" (audience) iddiası, JWT'nin hedeflendiği alıcıları belirler. JWT'yi işlemeyi amaçlayan her bir temsilcinin, "aud" iddiasında bir değerle kendini tanımlaması GEREKİR. İddia işleyen temsilci, bu iddia mevcutken kendini "aud" iddiasında bir değerle tanımlamazsa, JWT REDDEDİLMELİDİR. Genel durumda, "aud" değeri, büyük-küçük harfe duyarlı StringOrURI değeri içeren bir dizi olarak gelir. JWT'nin bir alıcısı olduğu özel durumda, "aud" değeri, bir StringOrURI değeri içeren tek bir büyük-küçük harfe duyarlı dize OLABİLİR. Alıcı değerlerinin yorumu genellikle uygulamaya özgüdür. Bu iddianın kullanımı İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="exp" xml:space="preserve">
    <value>"exp" (expiration time) iddiası, JWT'nin işlenmesi için kabul edilmemesi gereken son kullanma zamanını belirler. "exp" iddiasının işlenmesi, geçerli tarih/saat değerinin "exp" iddiasında belirtilen son kullanma tarih/saatinden önce olması GEREKTİĞİNİ gerektirir. Uygulayıcılar, saat farkını hesaba katmak için genellikle birkaç dakikadan fazla olmayan küçük bir esneklik sağlayabilirler. Değeri bir NumericDate değeri içeren bir sayı OLMALIDIR. Bu iddianın kullanımı İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="nbf" xml:space="preserve">
    <value>"nbf" (not before) iddiası, JWT'nin işlenmesi için kabul edilmemesi gereken zamanı belirler. "nbf" iddiasının işlenmesi, geçerli tarih/saat değerinin "nbf" iddiasında belirtilen başlangıç tarih/saatinden sonra veya bu tarihe eşit olması GEREKTİĞİNİ gerektirir. Uygulayıcılar, saat farkını hesaba katmak için genellikle birkaç dakikadan fazla olmayan küçük bir esneklik sağlayabilirler. Değeri bir NumericDate değeri içeren bir sayı OLMALIDIR. Bu iddianın kullanımı İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="iat" xml:space="preserve">
    <value>"iat" (issued at) iddiası, JWT'nin verildiği zamanı belirler. Bu iddia, JWT'nin yaşı belirlemek için kullanılabilir. Değeri bir NumericDate değeri içeren bir sayı OLMALIDIR. Bu iddianın kullanımı İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="jti" xml:space="preserve">
    <value>"jti" (JWT ID) iddiası, JWT için benzersiz bir tanımlayıcı sağlar. Tanımlayıcı değeri, aynı değerin yanlışlıkla farklı bir veri nesnesine atanma olasılığının ihmal edilebilir olduğu bir şekilde atanmalıdır; uygulama birden fazla veren kullanıyorsa, farklı verenler tarafından üretilen değerler arasındaki çakışmalar da ÖNLENMELİDİR. "jti" iddiası, JWT'nin yeniden oynatılmasını önlemek için kullanılabilir. "jti" değeri büyük-küçük harfe duyarlı bir dizedir. Bu iddianın kullanımı İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Son kullanıcının yerel ayarlarına ve tercihlerine göre sıralanmış olarak, başlıklar ve ekler dahil olmak üzere tüm ad parçalarını içeren görüntülenebilir biçimde Son Kullanıcının tam adı.</value>
  </data>
  <data name="given_name" xml:space="preserve">
    <value>Son Kullanıcının doğum adı(ları) ya da ilk ismi(leri). Bazı kültürlerde insanların birden fazla adı olabileceğini unutmayın; ismin bir bütün olarak eklenmesi için isimleri boşluk karakteriyle ayırın.</value>
  </data>
  <data name="family_name" xml:space="preserve">
    <value>Son Kullanıcının soyadı veya soyadları. Bazı kültürlerde insanlar birden fazla aile adına sahip olabilir veya hiç aile adına sahip olmayabilir; bu durumda adlar boşluk karakterleri ile ayrılmış olarak bulunabilir.</value>
  </data>
  <data name="middle_name" xml:space="preserve">
    <value>Son Kullanıcının ikinci adı veya ikinci adları. Bazı kültürlerde insanlar birden fazla ikinci adına sahip olabilir; bu adlar boşluk karakterleri ile ayrılmış olarak bulunabilir. Ayrıca, bazı kültürlerde ikinci adlar kullanılmayabilir.</value>
  </data>
  <data name="nickname" xml:space="preserve">
    <value>Son Kullanıcının resmi ismi olmayan, verilen ad (given_name) ile aynı olabilecek veya olmayabilecek olan sıradan adı. Örneğin, verilen adı "Michael" olan bir kişinin yanı sıra "Mike" takma adı da dönebilir.</value>
  </data>
  <data name="preferred_username" xml:space="preserve">
    <value>Son Kullanıcının, RP (Relying Party) tarafından adlandırılmak istediği kısaltma adı, örneğin "janedoe" veya "j.doe". Bu değer, @, / veya boşluk gibi özel karakterler içeren geçerli bir JSON dizesi olabilir. RP, bu değerin benzersiz olmasına güvenmemelidir.</value>
  </data>
  <data name="profile" xml:space="preserve">
    <value>Son Kullanıcının profil sayfasının URL'si. Bu web sayfasının içeriği, genellikle Son Kullanıcı ile ilgili olmalıdır.</value>
  </data>
  <data name="picture" xml:space="preserve">
    <value>Son Kullanıcının profil resminin URL'si. Bu URL, bir web sayfası yerine bir görüntü dosyasına (örneğin, bir PNG, JPEG veya GIF görüntü dosyası) yönlendirmelidir. Bu URL, özellikle Son Kullanıcıyı tanımlarken gösterilmek üzere uygun bir profil fotoğrafını belirtmelidir, Son Kullanıcı tarafından çekilen herhangi bir rastgele fotoğraf değil.</value>
  </data>
  <data name="website" xml:space="preserve">
    <value>Son Kullanıcının web sayfasının veya blogunun URL'si. Bu web sayfası, Son Kullanıcı veya Son Kullanıcı ile ilişkilendirilen bir organizasyon tarafından yayınlanan bilgileri içermelidir.</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Son Kullanıcının tercih ettiği e-posta adresi. Değeri RFC 5322 addr-spec sözdizimine uygun olmalıdır. RP (Relying Party), bu değerin benzersiz olmasına güvenmemelidir.</value>
  </data>
  <data name="email_verified" xml:space="preserve">
    <value>Son Kullanıcının e-posta adresi doğrulandıysa true, aksi takdirde false. Bu İddia Değerinin true olması durumunda, OP (OpenID Sağlayıcı), doğrulama işlemi sırasında bu e-posta adresinin Son Kullanıcı tarafından kontrol edildiğinden emin olmak için olumlu adımlar attı demektir. Bir e-posta adresinin nasıl doğrulandığı, tarafların işlem yaptığı güven çerçevesine veya sözleşme anlaşmalarına bağlı olarak bağlama özgüdür.</value>
  </data>
  <data name="gender" xml:space="preserve">
    <value>Son Kullanıcının cinsiyeti. Bu belirtim tarafından tanımlanan değerler kadın ve erkektir. Tanımlanan değerlerden hiçbiri uygulanabilir olmadığında başka değerler de KULLANILABİLİR.</value>
  </data>
  <data name="birthdate" xml:space="preserve">
    <value>Son Kullanıcının doğum günü, ISO 8601:2004 YYYY-MM-DD formatında temsil edilir. Yılın 0000 olarak temsil edilmesi, yılın çıkarıldığını gösterir. Yalnızca yılı temsil etmek için YYYY formatına izin verilir. Ancak, temel platformun tarihle ilgili işlevine bağlı olarak yalnızca yıl sağlamak, farklı ay ve gün sonuçlarına yol açabilir, bu nedenle uygulayıcılar bu faktörü doğru şekilde işlemek için dikkate almalıdır.</value>
  </data>
  <data name="zoneinfo" xml:space="preserve">
    <value>Son Kullanıcının saat dilimini temsil eden zoneinfo saat dilimi veritabanından bir dizedir. Örneğin, Europe/Paris veya America/Los_Angeles gibi.</value>
  </data>
  <data name="locale" xml:space="preserve">
    <value>Son Kullanıcının yerel ayarı, bir BCP47 [RFC5646] dil etiketi olarak temsil edilir. Bu genellikle küçük harfli bir ISO 639-1 Alpha-2 dil kodu ve büyük harfli bir ISO 3166-1 Alpha-2 ülke kodu arasına tire ile ayrılmış bir kombinasyondur. Örneğin, en-US veya fr-CA gibi. Uyumluluk notu olarak, bazı uygulamalar ayıracı tire yerine alt çizgi olarak kullanmıştır, örneğin en_US; Relying Parties (Güvenen Taraflar), bu yerel ayar sözdizimini kabul etmeyi seçebilir.</value>
  </data>
  <data name="phone_number" xml:space="preserve">
    <value>Son Kullanıcının tercih ettiği telefon numarası. Bu İddia'nın biçimi olarak E.164 önerilir, örneğin +1 (425) 555-1212 veya +56 (2) 687 2400. Telefon numarasında bir uzantı bulunuyorsa, uzantının RFC 3966 uzantı sözdizimi kullanılarak temsil edilmesi önerilir, örneğin +1 (604) 555-1234;ext=5678.</value>
  </data>
  <data name="phone_number_verified" xml:space="preserve">
    <value>Son Kullanıcının telefon numarası doğrulandıysa true, aksi takdirde false. Bu İddia Değerinin true olması durumunda, OP (OpenID Sağlayıcı), doğrulama işlemi sırasında bu telefon numarasının Son Kullanıcı tarafından kontrol edildiğinden emin olmak için olumlu adımlar attı demektir. Bir telefon numarasının nasıl doğrulandığı, tarafların işlem yaptığı güven çerçevesine veya sözleşme anlaşmalarına bağlı olarak bağlama özgüdür. Bu İddia Değerinin true olduğu durumda, telefon_numarası İddiası E.164 biçiminde olmalıdır ve herhangi bir uzantı, RFC 3966 biçiminde temsil edilmelidir.</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Son Kullanıcının tercih ettiği posta adresi. Adres üyesinin değeri bir JSON [RFC4627] yapısıdır. Bu yapının içeriği, posta adresi bilgilerini içermelidir.</value>
  </data>
  <data name="updated_at" xml:space="preserve">
    <value>Son Kullanıcının bilgilerinin en son güncellendiği zaman. Değeri, UTC'de ölçülen 1970-01-01T0:0:0Z tarih/saatinden itibaren geçen saniyeyi temsil eden bir JSON sayısıdır.</value>
  </data>
  <data name="azp" xml:space="preserve">
    <value>Yetkilendirilmiş taraf (authorized party) - ID Token'ın verildiği taraf. Varlığında olması durumunda, bu tarafın OAuth 2.0 İstemci Kimliği'ni içermelidir. Bu İddia, ID Token'ın yalnızca tek bir izleyici (audience) değeri olduğunda ve bu izleyici yetkilendirilmiş taraf (authorized party) ile farklı olduğunda gereklidir. Yetkilendirilmiş tarafın (authorized party) tek izleyici ile aynı olduğu durumda bile bu İddia dahil edilebilir. "azp" değeri, StringOrURI değeri içeren büyük-küçük harf duyarlı bir dizedir.</value>
  </data>
  <data name="nonce" xml:space="preserve">
    <value>Bir İstemci oturumunu bir ID Token ile ilişkilendirmek ve yeniden oynatma saldırılarını engellemek için kullanılan bir dizedir. Değer, Kimlik Doğrulama İsteği'nden ID Token'a değiştirilmeden iletilir. ID Token'da bulunuyorsa, İstemciler nonce İddia Değerinin, Kimlik Doğrulama İsteği'nde gönderilen nonce parametresinin değeriyle aynı olduğunu doğrulamalıdır. Kimlik Doğrulama İsteğinde bulunuyorsa, Yetkilendirme Sunucuları, ID Token'daki nonce İddiasını, Kimlik Doğrulama İsteğinde gönderilen nonce değeri ile aynı olan bir İddia Değeri olarak içermelidir. Yetkilendirme Sunucuları, kullanılan nonce değerleri üzerinde başka herhangi bir işlem yapmamalıdır. nonce değeri, büyük-küçük harf duyarlı bir dizedir.</value>
  </data>
  <data name="auth_time" xml:space="preserve">
    <value>Son Kullanıcının kimlik doğrulamasının gerçekleştiği zaman. Değeri, UTC'de ölçülen 1970-01-01T0:0:0Z tarih/saatinden itibaren geçen saniyeyi temsil eden bir JSON sayısıdır. Bir max_age isteği yapıldığında veya auth_time, Zorunlu Bir İddia olarak istendiğinde, bu İddia ZORUNLUDUR; aksi takdirde, dahiliği İSTEĞE BAĞLIDIR. (auth_time İddia, anlamsal olarak OpenID 2.0 PAPE auth_time yanıt parametresine karşılık gelir.)</value>
  </data>
  <data name="at_hash" xml:space="preserve">
    <value>Erişim Jetonu (Access Token) karma değeri. Değeri, ID Token'ın JOSE Başlık Parametresi olan alg Başlık Parametresinde kullanılan karma algoritması kullanılarak hesaplanan access_token değerinin ASCII temsilinin oktetlerinin en sol yarısının hash'inin base64url kodlamasıdır. Örneğin, alg RS256 ise, access_token değerini SHA-256 ile karma, ardından en sol 128 biti alın ve bunları base64url ile kodlayın. at_hash değeri büyük-küçük harf duyarlı bir dizedir.</value>
  </data>
  <data name="c_hash" xml:space="preserve">
    <value>Kod (Code) karma değeri. Değeri, ID Token'ın JOSE Başlık Parametresi olan alg Başlık Parametresinde kullanılan karma algoritması kullanılarak hesaplanan code değerinin ASCII temsilinin oktetlerinin en sol yarısının hash'inin base64url kodlamasıdır. Örneğin, alg HS512 ise, code değerini SHA-512 ile karma, ardından en sol 256 biti alın ve bunları base64url ile kodlayın. c_hash değeri büyük-küçük harf duyarlı bir dizedir. Eğer ID Token, Authorization Endpoint'ten bir kod ile veriliyorsa, ki bu response_type değerleri code id_token ve code id_token token için geçerlidir, bu ZORUNLUDUR; aksi takdirde, dahiliği İSTEĞE BAĞLIDIR.</value>
  </data>
  <data name="acr" xml:space="preserve">
    <value>Kimlik Doğrulama Bağlamı Sınıf Referansı. Yapılan kimlik doğrulamanın karşıladığı Kimlik Doğrulama Bağlamı Sınıfını tanımlayan bir Kimlik Doğrulama Bağlamı Sınıf Referansı değerini belirten bir dizedir. "0" değeri, Son Kullanıcı kimlik doğrulamasının ISO/IEC 29115 seviye 1 gereksinimlerini karşılamadığını gösterir. Uzun süreli bir tarayıcı çerezi kullanarak kimlik doğrulama, örneğin, "seviye 0" kullanmanın uygun olduğu bir örnektir. Seviye 0 ile yapılan kimlik doğrulamalar, herhangi bir maddi değere sahip herhangi bir kaynağa erişimi yetkilendirmek için KULLANILMAMALIDIR. (Bu, OpenID 2.0 PAPE nist_auth_level 0'la karşılık gelir.) Bir mutlak URI veya RFC 6711 kayıtlı adı acr değeri olarak kullanılmalıdır; kayıtlı adlar, kaydedildiği anlamın dışında kullanılmamalıdır. Bu iddiayı kullanan taraflar, kullanılan değerlerin anlamları üzerinde anlaşmalıdır, bu bağlama özgü olabilir. acr değeri büyük-küçük harf duyarlı bir dizedir.</value>
  </data>
  <data name="amr" xml:space="preserve">
    <value>Kimlik Doğrulama Yöntemi Referansları. Kimlik doğrulamada kullanılan kimlik doğrulama yöntemlerini tanımlayan kimlik doğrulama yöntemleri için kimlikler olan bir JSON dizisidir. Örneğin, değerler hem şifre hem de OTP kimlik doğrulama yöntemlerinin kullanıldığını belirtebilir. Bu iddiayı kullanan taraflar, kullanılan değerlerin anlamları üzerinde anlaşmalıdır, bu bağlama özgü olabilir. amr değeri, büyük-küçük harf duyarlı dizeden oluşan bir dizidir.</value>
  </data>
  <data name="sub_jwk" xml:space="preserve">
    <value>Self-Veren Bir OpenID Sağlayıcı tarafından verilen bir ID Token'ın imzasını kontrol etmek için kullanılan genel anahtar. Anahtar, JWK formatında çıplak bir anahtardır (bir X.509 sertifika değil). sub_jwk değeri bir JSON nesnesidir. sub_jwk İddiasının kullanımı, OP (OpenID Sağlayıcı) Self-Veren değilken ÖNERİLMEMEKTEDİR.</value>
  </data>
</root>
