<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:DevToys.UI.Controls"
    xmlns:DevToys="using:DevToys"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Light">
            <SolidColorBrush x:Key="TextEditorForeground" Color="Black"/>

            <!-- REVIEW: If Navigation View Content Grid Border Brush has transparency, it makes WebView being unclickable (can't get focus),
            which breaks Monaco Editor. The line below change the border brush to use a solid one (without transparency). -->
            <StaticResource x:Key="NavigationViewContentGridBorderBrush" ResourceKey="CardStrokeColorDefaultSolidBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
            <SolidColorBrush x:Key="TextEditorForeground" Color="#F0F0F0"/>

            <!-- REVIEW: If Navigation View Content Grid Border Brush has transparency, it makes WebView being unclickable (can't get focus),
            which breaks Monaco Editor. The line below change the border brush to use a solid one (without transparency). -->
            <StaticResource x:Key="NavigationViewContentGridBorderBrush" ResourceKey="CardStrokeColorDefaultSolidBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <SolidColorBrush x:Key="TextEditorForeground" Color="{ThemeResource TextControlForeground}"/>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <DevToys:LanguageManager x:Key="LanguageManager"/>

    <Style TargetType="ContentControl">
        <Setter Property="HighContrastAdjustment" Value="None"/>
    </Style>

    <Style TargetType="ContentPresenter">
        <Setter Property="HighContrastAdjustment" Value="None"/>
    </Style>

    <Style TargetType="FontIcon">
        <Setter Property="FontFamily" Value="{StaticResource FluentSystemIcons}"/>
        <Setter Property="HighContrastAdjustment" Value="None"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="HighContrastAdjustment" Value="None"/>
    </Style>
    
    <Style TargetType="ToggleSwitch">
        <Setter Property="OnContent" Value="{Binding Instance.Common.ToggleSwitchOn, Mode=OneTime, Source={StaticResource LanguageManager}}"/>
        <Setter Property="OffContent" Value="{Binding Instance.Common.ToggleSwitchOff, Mode=OneTime, Source={StaticResource LanguageManager}}"/>
    </Style>

    <Style TargetType="toolkit:GridSplitter">
        <Setter Property="GripperForeground" Value="{ThemeResource ButtonForeground}"/>
        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:GridSplitter">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="GridSplitterStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Content="{TemplateBinding Element}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
