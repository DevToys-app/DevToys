@namespace DevToys.MauiBlazor.Components
@using DevToys.Core.Tools.ViewItems;
@inherits MefLayoutComponentBase

<CascadingValue Value="this" Name="NavMenu" IsFixed="true">
    <CascadingValue Value="Collapsed" Name="NavMenuExpanded" IsFixed="true">
        <nav id="@Id" class="@CssClasses" role="navigation" data-collapse="@CollapsedName">
            <div class="navbar-header-container">
                @if (IsCollapsible)
                {
                    <Button Class="navbar-toggler"
                            title="Navbar Toggler" aria-controls="navbarNav" aria-expanded="@CollapsedName" aria-label="Toggle navigation"
                        Appearance="@ButtonAppearance.Stealth"
                        IconOnly="true" @onclick=@OnTogglePaneButtonClickAsync>
                        <i class="icon-ic_fluent_navigation_24_regular"></i>
                    </Button>
                }
            </div>
            @if (HasSearch)
            {
                <FormItem>
                    <input type="text" class="form-control" placeholder="Type to search for a tools" aria-label="Search tools" aria-describedby="basic-addon2">
                    <div class="form-input-group-text">
                        <i class="icon-ic_fluent_search_32_regular"></i>
                    </div>
                </FormItem>
            }

            <ul class="nav-items scrollable vertical">
                @if (MenuItemsSource is not null)
                {
                    @foreach (INotifyPropertyChanged item in MenuItemsSource)
                    {
                        if (item is GuiToolViewItem guiToolViewItem)
                        {
                            <NavbarItem Item="item"
                                        Selected="item == SelectedItem"
                                        OnSelected=@OnItemSelectedAsync />
                        }
                        else if (item is GroupViewItem groupViewItem)
                        {
                            if (groupViewItem.Children is not null)
                            {
                                <NavbarGroup Item="item"
                                             Selected="item == SelectedItem"
                                             OnSelected=@OnItemSelectedAsync>
                                    @foreach (var childItem in groupViewItem.Children)
                                    {
                                        <NavbarItem Item="childItem"
                                                    Selected="childItem == SelectedItem"
                                                    OnSelected=@OnItemSelectedAsync/>
                                    }
                                </NavbarGroup>
                            }
                            else
                            {
                                <NavbarItem Item="item"
                                            Selected="item == SelectedItem"
                                            OnSelected=@OnItemSelectedAsync/>
                            }
                        }
                        else if (item is SeparatorViewItem)
                        {
                            <li class="nav-item nav-separator"></li>
                        }
                        else
                        {
                            ThrowHelper.ThrowNotSupportedException();
                        }
                    }
                }
            </ul>

            <ul class="nav-items sticky-bottom">
                @if (FooterMenuItemsSource is not null)
                {
                    @foreach (var item in FooterMenuItemsSource)
                    {
                        if (item is GuiToolViewItem guiToolViewItem)
                        {
                            <NavbarItem Item="item"
                                        Selected="item == SelectedItem"
                                        OnSelected=@OnItemSelectedAsync/>
                        }
                        else if (item is SeparatorViewItem)
                        {
                            <li class="nav-item nav-separator"></li>
                        }
                        else
                        {
                            ThrowHelper.ThrowNotSupportedException();
                        }
                    }
                }
            </ul>
        </nav>
    </CascadingValue>

    <main class="page">
        @Content
    </main>
</CascadingValue>