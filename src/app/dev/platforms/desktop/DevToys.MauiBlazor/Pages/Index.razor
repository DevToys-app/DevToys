@page "/"

@using DevToys.Core.Tools.ViewItems;

@inherits MefComponentBase

<NavBar MenuItemsSource="@ViewModel.HeaderAndBodyToolViewItems"
        FooterMenuItemsSource="@ViewModel.FooterToolViewItems"
        @bind-SelectedItem="ViewModel.SelectedMenuItem">
    <!-- Header -->
    <Header>
        <TextBlock>DevToys</TextBlock>
    </Header>

    <!-- Item design -->
    <NavBarItemIconTemplate Context="item">
        @{
            var iconGlyph = '\0';
            var iconFontFamily = string.Empty;
            if (item is GuiToolViewItem guiToolViewItem)
            {
                iconGlyph = guiToolViewItem.ToolInstance.IconGlyph;
                iconFontFamily = guiToolViewItem.ToolInstance.IconFontName;
            }
            else if (item is GroupViewItem groupViewItem)
            {
                iconGlyph = groupViewItem.IconGlyph;
                iconFontFamily = groupViewItem.IconFontName;
            }

            <FontIcon FontFamily="@iconFontFamily" Glyph="@iconGlyph" />
        }
    </NavBarItemIconTemplate>

    <NavBarItemTitleTemplate Context="item">
        @{
            var title = string.Empty;
            if (item is GuiToolViewItem guiToolViewItem)
            {
                title = guiToolViewItem.MenuDisplayTitle;
            }
            else if (item is GroupViewItem groupViewItem)
            {
                title = groupViewItem.DisplayTitle;
            }

            <TextBlock NoWrap="true">@title</TextBlock>
        }
    </NavBarItemTitleTemplate>

    <!-- Content of the NavBar-->
    <Content>
        @if (!IsTransitioning)
        {
            if (ViewModel.SelectedMenuItem is GuiToolViewItem guiToolViewItem)
            {
                <div class="entranceThemeTransition">
                    <TextBlock Appearance="TextBlockAppearance.TitleLarge">@guiToolViewItem.ToolInstance.LongOrShortDisplayTitle</TextBlock>
                    <!-- TODO: Place here a component that takes in argument the guiToolViewItem -->

                    <Button IsEnabled="true" @onclick="OnSetFavorite">Set favorite</Button>
                    <Button IsEnabled="false">Set favorite</Button>
                    <Button IsEnabled="true" Appearance="ButtonAppearance.Accent">Set favorite</Button>
                    <Button IsEnabled="false" Appearance="ButtonAppearance.Accent">Set favorite</Button>
                    <Button IsEnabled="true" Appearance="ButtonAppearance.Stealth">Set favorite</Button>
                    <Button IsEnabled="false" Appearance="ButtonAppearance.Stealth">Set favorite</Button>
                </div>
            }
            else if (ViewModel.SelectedMenuItem is GroupViewItem groupToolViewItem)
            {
                <ToolGroup GroupViewItem="@groupToolViewItem" />
            }
        }
    </Content>
</NavBar>