@namespace DevToys.Blazor.Components.UIElements
@using DevToys.Api;
@inherits ComponentBase

@if (UIElement is not null)
{
    switch (UIElement)
    {
        case IUIStack stack:
            <UIStackPresenter UIStack="@stack" />
            break;

        case IUIWrap wrap:
            <UIWrapPresenter UIWrap="@wrap" />
            break;

        case IUIButton button:
            <UIButtonPresenter UIButton="@button" />
            break;

        case IUISettingGroup settingGroup:
            <UISettingGroupPresenter UISettingGroup="@settingGroup" />
            break;

        case IUISetting setting:
            <UISettingPresenter UISetting="@setting" />
            break;

        case IUISwitch @switch:
            <UISwitchPresenter UISwitch="@(@switch)" />
            break;

        case IUISelectDropDownList selectDropDownList:
            <UISelectDropDownListPresenter UISelectDropDownList="@selectDropDownList" />
            break;

        case IUIDiffTextInput diffTextInput:
            <UIDiffTextInputPresenter UIDiffTextInput="@diffTextInput" />
            break;

        case IUIMultiLineTextInput multiLineTextInput:
            <UIMultiLineTextInputPresenter UIMultiLineTextInput="@multiLineTextInput" />
            break;

        case IUISingleLineTextInput singleLineTextInput:
            <UISingleLineTextInputPresenter UISingleLineTextInput="@singleLineTextInput" />
            break;

        case IUIIcon icon:
            <UIIconPresenter UIIcon="@icon" />
            break;

        default:
            throw new NotSupportedException($"Gui Tool component of type '{UIElement.GetType().FullName}' isn't supported.");
    }
}