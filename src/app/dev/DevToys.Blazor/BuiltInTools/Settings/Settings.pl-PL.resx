<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>O aplikacji</value>
  </data>
  <data name="AccessibleName" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="Appearance" xml:space="preserve">
    <value>Wygląd</value>
  </data>
  <data name="AppTheme" xml:space="preserve">
    <value>Motyw aplikacji</value>
  </data>
  <data name="AppThemeDescription" xml:space="preserve">
    <value>Wybierz motyw aplikacji</value>
  </data>
  <data name="Behaviors" xml:space="preserve">
    <value>Zachowania</value>
  </data>
  <data name="CheckForUpdate" xml:space="preserve">
    <value>Check for update</value>
  </data>
  <data name="CheckForUpdateDescription" xml:space="preserve">
    <value>Automatically check for updates when DevToys starts</value>
  </data>
  <data name="CompactMode" xml:space="preserve">
    <value>Kompaktowy odstęp</value>
  </data>
  <data name="CompactModeDescription" xml:space="preserve">
    <value>Zmniejsz odstęp między elementami interfejsu</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Ciemny</value>
  </data>
  <data name="DefaultLanguage" xml:space="preserve">
    <value>Taki sam jak w systemie</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Dostosuj wygląd DevToys</value>
  </data>
  <data name="DevToysMac" xml:space="preserve">
    <value>{0} za rozpoczęcie rozwoju DevToysMac</value>
    <comment>{0} will be replaced by a name</comment>
  </data>
  <data name="Editing" xml:space="preserve">
    <value>Edytowanie</value>
  </data>
  <data name="EndOfLinePreference" xml:space="preserve">
    <value>Znak końca linii</value>
  </data>
  <data name="EndOfLinePreferenceAutomatic" xml:space="preserve">
    <value>Taki sam jak w wejściu (automatycznie)</value>
  </data>
  <data name="EndOfLinePreferenceCRLF" xml:space="preserve">
    <value>Carriage Return and Line Feed (\r\n) (Windows)</value>
  </data>
  <data name="EndOfLinePreferenceLF" xml:space="preserve">
    <value>Line Feed (\n) (Unix)</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Czcionka</value>
  </data>
  <data name="HelpTranslating" xml:space="preserve">
    <value>Pomóż nam przetłumaczyć DevToys!</value>
  </data>
  <data name="HighlightCurrentLine" xml:space="preserve">
    <value>Podkreśl obecną linię</value>
  </data>
  <data name="HighlightCurrentLineDescription" xml:space="preserve">
    <value>Zmień kolor tła bieżącej linii tak, aby była lepiej widoczna</value>
  </data>
  <data name="HighlightCurrentLineStateDescriptionWhenOn" xml:space="preserve">
    <value>Higlight the current line</value>
  </data>
  <data name="IconDesigner" xml:space="preserve">
    <value>{0} za zaprojektowanie ikony aplikacji</value>
    <comment>{0} will be replaced by a name</comment>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Język</value>
  </data>
  <data name="LanguageDescription" xml:space="preserve">
    <value>Aplikacja musi zostać uruchomiona ponownie po wybraniu innego języka</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Jasny</value>
  </data>
  <data name="LineNumbers" xml:space="preserve">
    <value>Numery linii</value>
  </data>
  <data name="LineNumbersDescription" xml:space="preserve">
    <value>Pokazuj numery linii w edytorze tekstu</value>
  </data>
  <data name="LineNumbersStateDescriptionWhenOn" xml:space="preserve">
    <value>Pokaż numery linii</value>
  </data>
  <data name="OpenLogs" xml:space="preserve">
    <value>Open logs</value>
  </data>
  <data name="PasteClearsText" xml:space="preserve">
    <value>Zastąp tekst podczas wklejania</value>
  </data>
  <data name="PasteClearsTextDescription" xml:space="preserve">
    <value>Po kliknięciu przycisku "wklej", najpierw wyczyść tekst, a dopiero potem wklej go do aktualnej zawartości edytora tekstu.</value>
  </data>
  <data name="PasteClearsTextStateDescriptionWhenOn" xml:space="preserve">
    <value>Zastąp tekst podczas wklejania</value>
  </data>
  <data name="RenderWhitespace" xml:space="preserve">
    <value>Renderuj znaki niedrukowane</value>
  </data>
  <data name="RenderWhitespaceStateDescriptionWhenOn" xml:space="preserve">
    <value>Pokaż znaki niedrukowane</value>
  </data>
  <data name="ShortDisplayTitle" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="SmartDetection" xml:space="preserve">
    <value>Inteligentny wybór narzędzia</value>
  </data>
  <data name="SmartDetectionDescription" xml:space="preserve">
    <value>Automatycznie wykryj najlepsze narzędzie na podstawie zawartości schowka</value>
  </data>
  <data name="SmartDetectionPaste" xml:space="preserve">
    <value>Automatycznie wklej zawartość schowka po wybraniu zalecanego narzędzia</value>
  </data>
  <data name="SpecialThanks" xml:space="preserve">
    <value>Szczególne podziękowania dla</value>
  </data>
  <data name="TextEditor" xml:space="preserve">
    <value>Edytor tekstu</value>
  </data>
  <data name="TextEditorPreview" xml:space="preserve">
    <value>Podgląd</value>
  </data>
  <data name="UsefulLinks" xml:space="preserve">
    <value>Useful links</value>
  </data>
  <data name="UsefulLinksLicense" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="UsefulLinksPrivacyPolicy" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="UsefulLinksReportProblem" xml:space="preserve">
    <value>Report a problem</value>
  </data>
  <data name="UsefulLinksSourceCode" xml:space="preserve">
    <value>Source code</value>
  </data>
  <data name="UsefulLinksThirdPartyLicenses" xml:space="preserve">
    <value>Third party licenses</value>
  </data>
  <data name="UseSystemSettings" xml:space="preserve">
    <value>Użyj ustawień systemowych</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Wersja {0}</value>
  </data>
  <data name="WordWrap" xml:space="preserve">
    <value>Zawijaj wiersze</value>
  </data>
  <data name="WordWrapStateDescriptionWhenOn" xml:space="preserve">
    <value>Zawijanie wierszy</value>
  </data>
</root>