//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevToys.Blazor.BuiltInTools.ExtensionsManager {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExtensionsManager {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExtensionsManager() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DevToys.Blazor.BuiltInTools.ExtensionsManager.ExtensionsManager", typeof(ExtensionsManager).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage extensions in DevToys.
        /// </summary>
        internal static string AccessibleName {
            get {
                return ResourceManager.GetString("AccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add and manager third-party extensions in DevToys.
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extension &apos;{0}&apos; is already installed. If you are trying to update an extension that is already installed, please uninstall the older version first..
        /// </summary>
        internal static string ExtensionAlreadyInstalledDescription {
            get {
                return ResourceManager.GetString("ExtensionAlreadyInstalledDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to install this extension.
        /// </summary>
        internal static string ExtensionAlreadyInstalledTitle {
            get {
                return ResourceManager.GetString("ExtensionAlreadyInstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} - {1}.
        /// </summary>
        internal static string ExtensionTitleInList {
            get {
                return ResourceManager.GetString("ExtensionTitleInList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find more extensions online.
        /// </summary>
        internal static string FindMoreExtension {
            get {
                return ResourceManager.GetString("FindMoreExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install an extension.
        /// </summary>
        internal static string InstallExtension {
            get {
                return ResourceManager.GetString("InstallExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create an extension for DevToys.
        /// </summary>
        internal static string LearnDevelopExtension {
            get {
                return ResourceManager.GetString("LearnDevelopExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OKButtonText {
            get {
                return ResourceManager.GetString("OKButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please close all DevToys windows and restart the app to apply the modifications..
        /// </summary>
        internal static string RestartRequiredInfoBarDescription {
            get {
                return ResourceManager.GetString("RestartRequiredInfoBarDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart is require for changes to take effect.
        /// </summary>
        internal static string RestartRequiredInfoBarTitle {
            get {
                return ResourceManager.GetString("RestartRequiredInfoBarTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage extensions.
        /// </summary>
        internal static string ShortDisplayTitle {
            get {
                return ResourceManager.GetString("ShortDisplayTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Third-party extensions can modify the functionality of existing tools and access your computer without your permission. This may expose your data to the internet or install unwanted software on your device. We strongly recommend that you exercise caution and only install extensions that you trust. DevToys authors are not responsible for any damages or losses caused by extensions..
        /// </summary>
        internal static string WarningThirdPartyExtensionUsageDescription {
            get {
                return ResourceManager.GetString("WarningThirdPartyExtensionUsageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I understand.
        /// </summary>
        internal static string WarningThirdPartyExtensionUsageIUnderstand {
            get {
                return ResourceManager.GetString("WarningThirdPartyExtensionUsageIUnderstand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terms and Conditions.
        /// </summary>
        internal static string WarningThirdPartyExtensionUsageTermsConditions {
            get {
                return ResourceManager.GetString("WarningThirdPartyExtensionUsageTermsConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string WarningThirdPartyExtensionUsageTitle {
            get {
                return ResourceManager.GetString("WarningThirdPartyExtensionUsageTitle", resourceCulture);
            }
        }
    }
}
