# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger: none
pr: none

pool:
  vmImage: 'windows-latest'

variables:
  group: BuildPipelineVariables
  uwpProject: '**/*.wapproj'
  buildPlatform: 'x86|x64|ARM|ARM64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  certificateSecureFilePath: 'DevToys.Startup_TemporaryKey.pfx'

jobs:
### Sideload release ###
- job: SideloadRelease
  displayName: 'Sideload Release Build'
  timeoutInMinutes: 120
  steps:

  - task: PowerShell@2
    displayName: 'Rename app in appxmanifest'
    inputs:
      targetType: 'inline'
      script: |
        [xml]$xmlDoc = Get-Content $(Build.SourcesDirectory)\src\dev\shared\Package.appxmanifest
        $xmlDoc.Package.Identity.Name="DevToys"
        $xmlDoc.Package.Identity.Publisher="CN=etiennebaudoux"
        $xmlDoc.Package.Properties.DisplayName="DevToys"
        $xmlDoc.Package.Applications.Application.VisualElements.DisplayName="DevToys"
        $xmlDoc.Save('$(Build.SourcesDirectory)\src\dev\shared\Package.appxmanifest')
      failOnStderr: true

  - task: DownloadSecureFile@1
    displayName: 'Download certificate'
    name: signingCert
    inputs:
      secureFile: '$(certificateSecureFilePath)'

  # Run the init.ps1, which mostly restores dependencies
  - task: PowerShell@2
    displayName: 'Restore nuget packages'
    inputs:
      filePath: 'init.ps1'
      failOnStderr: true

  # Builds the msixbundle file
  - task: MSBuild@1
    displayName: 'Build Sideload package'
    inputs:
      solution: '$(uwpProject)'
      platform: 'x86'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:build;_GenerateAppxPackage 
                         /p:AppxBundlePlatforms="$(buildPlatform)"
                         /p:AppxPackageDir="$(appxPackageDir)"
                         /p:AppxBundle=Always
                         /p:UapAppxPackageBuildMode=Sideload
                         /p:AppxPackageSigningEnabled=true
                         /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
                         /p:PackageCertificatePassword=""
                         /p:PackageCertificateThumbprint=""'
      maximumCpuCount: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(appxPackageDir)'

### Store release ###
- job: StoreRelease
  displayName: 'Store Release Build'
  timeoutInMinutes: 120
  steps:

  - task: PowerShell@2
    displayName: 'Rename app in appxmanifest'
    inputs:
      targetType: 'inline'
      script: |
        [xml]$xmlDoc = Get-Content $(Build.SourcesDirectory)\src\dev\shared\Package.appxmanifest
        $xmlDoc.Package.Identity.Name="64360VelerSoftware.DevToys"
        $xmlDoc.Package.Identity.Publisher="CN=3D87C8C2-C6F4-4875-B258-5FEC13B08F81"
        $xmlDoc.Package.Properties.DisplayName="DevToys"
        $xmlDoc.Package.Applications.Application.VisualElements.DisplayName="DevToys"
        $xmlDoc.Save('$(Build.SourcesDirectory)\src\dev\shared\Package.appxmanifest')
      failOnStderr: true

  # Run the init.ps1, which mostly restores dependencies
  - task: PowerShell@2
    displayName: 'Restore nuget packages'
    inputs:
      filePath: 'init.ps1'
      failOnStderr: true

  # Builds the msixbundle file
  - task: MSBuild@1
    displayName: 'Build Store package'
    inputs:
      solution: '$(uwpProject)'
      platform: 'x86'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:build;_GenerateAppxPackage 
                         /p:AppxBundlePlatforms="$(buildPlatform)"
                         /p:AppxPackageDir="$(appxPackageDir)"
                         /p:AppxBundle=Always
                         /p:UapAppxPackageBuildMode=StoreUpload
                         /p:AppxPackageSigningEnabled=false'
      maximumCpuCount: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(appxPackageDir)'